// This file was generated by Mendix Studio Pro.
//
// WARNING: Only the following code will be retained when actions are regenerated:
// - the import list
// - the code between BEGIN USER CODE and END USER CODE
// - the code between BEGIN EXTRA CODE and END EXTRA CODE
// Other code you write will be lost the next time you deploy the project.
// Special characters, e.g., é, ö, à, etc. are supported in comments.

package japanesedelivery.actions;

import com.mendix.core.Core;
import com.mendix.systemwideinterfaces.core.IContext;
import com.mendix.webui.CustomJavaAction;
import com.mendix.systemwideinterfaces.core.IMendixObject;
import java.io.*;
import java.util.Base64;

public class DecodeBase64ToImage extends CustomJavaAction<IMendixObject>
{
	private java.lang.String Base64Str;
	private IMendixObject __image;
	private japanesedelivery.proxies.BarcodeImageEntity image;

	public DecodeBase64ToImage(IContext context, java.lang.String Base64Str, IMendixObject image)
	{
		super(context);
		this.Base64Str = Base64Str;
		this.__image = image;
	}

	@java.lang.Override
	public IMendixObject executeAction() throws Exception
	{
		this.image = this.__image == null ? null : japanesedelivery.proxies.BarcodeImageEntity.initialize(getContext(), __image);

		// BEGIN USER CODE
		Base64.Decoder decoder = Base64.getDecoder();
		byte[] bytes = decoder.decode(Base64Str);

		for (int i = 0; i < bytes.length; ++i) {
			if (bytes[i] < 0) {
				bytes[i] += 256;
			}
		}
		// 项目绝对路
		// 保存图片
//		OutputStream out = new FileOutputStream("C:\\Users\\wu\\Develop\\workspace\\untitled\\x.jpg");
		InputStream in = new ByteArrayInputStream(bytes);
		Core.storeImageDocumentContent(this.getContext(), __image, in, 100 ,150);

		return __image;
		// END USER CODE
	}

	/**
	 * Returns a string representation of this action
	 * @return a string representation of this action
	 */
	@java.lang.Override
	public java.lang.String toString()
	{
		return "DecodeBase64ToImage";
	}

	// BEGIN EXTRA CODE
	// END EXTRA CODE
}
