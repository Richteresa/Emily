// This file was generated by Mendix Studio Pro.
//
// WARNING: Only the following code will be retained when actions are regenerated:
// - the import list
// - the code between BEGIN USER CODE and END USER CODE
// - the code between BEGIN EXTRA CODE and END EXTRA CODE
// Other code you write will be lost the next time you deploy the project.
// Special characters, e.g., é, ö, à, etc. are supported in comments.

package japanesedelivery.actions;

import com.mendix.systemwideinterfaces.core.IContext;
import com.mendix.webui.CustomJavaAction;
import org.jbarcode.JBarcode;
import org.jbarcode.JBarcodeFactory;
import org.jbarcode.encode.Code128Encoder;
import org.jbarcode.encode.InvalidAtributeException;
import org.jbarcode.paint.EAN13TextPainter;
import org.jbarcode.paint.WidthCodedPainter;
import org.jbarcode.util.ImageUtil;
import javax.imageio.ImageIO;
import java.awt.image.BufferedImage;
import java.io.ByteArrayOutputStream;
import java.util.Base64;

public class DeliveryNoToBase64Image extends CustomJavaAction<java.lang.String>
{
	private java.lang.String deliveryNo;

	public DeliveryNoToBase64Image(IContext context, java.lang.String deliveryNo)
	{
		super(context);
		this.deliveryNo = deliveryNo;
	}

	@java.lang.Override
	public java.lang.String executeAction() throws Exception
	{
		// BEGIN USER CODE
		try {
			BufferedImage image = getJbarcode().createBarcode(deliveryNo);
			
			ByteArrayOutputStream outputStream = new ByteArrayOutputStream();
			ImageIO.write(image, "jpg", outputStream);
			java.util.Base64.Encoder encoder = Base64.getEncoder();
			return encoder.encodeToString(outputStream.toByteArray());
		} catch (Exception e) {
			e.printStackTrace();
			return "encodeError";
		}
		// END USER CODE
	}

	/**
	 * Returns a string representation of this action
	 * @return a string representation of this action
	 */
	@java.lang.Override
	public java.lang.String toString()
	{
		return "DeliveryNoToBase64Image";
	}

	// BEGIN EXTRA CODE

	private static final int BARCODE_DPI = ImageUtil.DEFAULT_DPI;// 精细度，采用默认
	private static final String FONT_FAMILY = "console";
	private static final int FONT_SIZE = 13;
	private static String TEXT = "";
	private static JBarcode jbc = null;

	public static JBarcode getJbarcode() throws InvalidAtributeException {
		// 注：
		// 1.常量条形码的高度和字体大小设置很重要，若是设置小了会看不到设置的文件
		// 2.生成的条码偶尔扫描不了，是因为条形码密度太厚，故"setXDimension()"很重要，
		// 值越小密度越细，条形码宽度越宽(高度越高，图片宽度越窄)

		if (jbc == null) {
			// 生成code128
			jbc = JBarcodeFactory.getInstance().createCode128();
			jbc.setEncoder(Code128Encoder.getInstance());
			// 获取自定义文本实例
			jbc.setTextPainter(EAN13TextPainter.getInstance());
			// 是否展示文本
			jbc.setShowText(true);
			// 设置高度
			jbc.setBarHeight(15);
			// 设置尺寸、大小、密集程度
			jbc.setXDimension(Double.valueOf(0.8).doubleValue());
			jbc.setPainter(WidthCodedPainter.getInstance());
			// 设置宽度比率
			jbc.setWideRatio(Double.valueOf(30).doubleValue());
			// 是否检查数字
			jbc.setCheckDigit(true);
			// 显示检查数字
			jbc.setShowCheckDigit(false);
		}
		return jbc;
	}
	// END EXTRA CODE
}
